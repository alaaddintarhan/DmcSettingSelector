org.kie.api.runtime.Environment env = kcontext.getKnowledgeRuntime().getEnvironment();
 
java.time.Instant lastTriggeredTime = (java.time.Instant)kcontext.getKnowledgeRuntime().getGlobal("g_dmcSettingTriggerTime");

if(lastTriggeredTime != null){

  java.lang.Long triggerInterval_min = (java.lang.Long)env.get("dmcSettingTriggerInterval_min");
  System.out.println("\n.....> interval : "+triggerInterval_min);

   java.time.Instant  nextTriggerTime = lastTriggeredTime.plus(triggerInterval_min, java.time.temporal.ChronoUnit.MINUTES);

  if(nextTriggerTime.isBefore(java.time.Instant.now())){
	 kcontext.getKnowledgeRuntime().setGlobal("g_dmcSettingList",null);
	 kcontext.getKnowledgeRuntime().setGlobal("g_dmcSettingTriggerTime",null);
	 System.out.println("\n.....> clear global parameters : g_dmcSettingList , g_dmcSettingTriggerTime ....... ");
  }
  else{
		dmcSettingList=(java.util.ArrayList) kcontext.getKnowledgeRuntime().getGlobal("g_dmcSettingList");
		kcontext.setVariable("dmcSettingList",dmcSettingList);
		System.out.println("\n.....> last triggered time :"+lastTriggeredTime);
	 }
}